.. _samlComplianceTool:

Run SAML compliance tests 
===========================

The purpose of SAML compliance tests is to ensure that the service you're building is compliant with the SAML profile. This will guarantee that:

* your service will work with GOV.UK Verify 
* user data will remain secure within the GOV.UK Verify federation

Use the compliance tool after :ref:`building your local matching service <msBuild>` and :ref:`installing your Matching Service Adapter <msa_install_msa>`. After SAML compliance tests, run :ref:`end-to-end testing <envEndToEndTests>` in the integration environment.  Your GOV.UK Verify engagement lead provides access to the compliance tool on completion of a successful `Stage 3 <http://alphagov.github.io/identity-assurance-documentation/stage3/Stage3.html>`_ gate review.


The SAML compliance tool tests the connections between:

* your service and a test instance of the GOV.UK Verify hub (see below)
* :ref:`the GOV.UK Verify hub and the Matching Service Adapter <msa_test_msa>` 

The compliance tool provides clear error messages. These will help with iterative development of your service.  

We advise you to use the compliance tool as part of your continuous integration pipeline. This ensures that any changes maintain backwards compatibility. 

Test connections between your service and the GOV.UK Verify hub
-----------------------------------------------------------------

To use the compliance tool, you need configuration data. Generate the configuration data for every test run.


1. Generate configuration data for your:

 * service
 * local matching service
 * Matching Service Adapter

 The configuration data includes self-signed certificates that you will use only with the compliance tool. 
 The configuration data contains the:

  * entity id for your service
  * assertion consumer service URL: this is the URL that will consume responses from the GOV.UK Verify hub
  * signing certificate for your service
  * encryption certificate for your service
  * expected persistent identifier: this is the user id that the Matching Service Adapter returns in an assertion
  * entity id for your Matching Service Adapter
  * private signing key for the Matching Service Adapter: you need this because the compliance tool sends a response to your service which contains an assertion signed by the Matching Service Adapter
  * list of attributes the government service requires for user account creation (optional)

   .. note:: Provide this list only if you want to test :ref:`new user account creation <ms_cua>`. The matching service can send the following fields to the assertion consumer service endpoint:

     * ``FIRST_NAME``
     * ``FIRST_NAME_VERIFIED``
     * ``MIDDLE_NAME``
     * ``MIDDLE_NAME_VERIFIED``
     * ``SURNAME``
     * ``SURNAME_VERIFIED``
     * ``DATE_OF_BIRTH``
     * ``DATE_OF_BIRTH_VERIFIED``
     * ``CURRENT_ADDRESS``
     * ``CURRENT_ADDRESS_VERIFIED``
     * ``CYCLE_3``

2. POST the following JSON (via curl, or similar) to the ``URI compliance-tool.RPPostUri`` provided by your GOV.UK Verify engagement lead::


    Content-Type: application/json
    {
        "rpEntityId":"[entity id for your service]",
        "assertionConsumerServiceUrl":"[assertion consumer service URL",
        "signingPublicCert":"[base 64 encoded X509 signing certificate]",
        "encryptionPublicCert":"[base 64 encoded X509 encryption certificate]",
        "expectedPID":"[expected persistent identifier]",
        "matchingServiceEntityId":"[entity id for your matching service]",
        "matchingServiceSigningPrivateCert":"[base 64 private signing key for the Matching Service Adapter]",
        "userAccountCreationAttributes":"[attributes the government service requires for account creation]"
    }

  Replace the square brackets and their contents with your configuration data. 

  The keys in the configuration data must be single-line strings of base 64 data without the text 'CERTIFICATE' and 'END CERTIFICATE'.

  .. note:: The private signing key for the Matching Service Adapter must be in PKCS#8 PEM format, for example:
  
    ::

     cat server.crt server.key > server.pem
      
     openssl pkcs8 -nocrypt -in server.pem -out server.pk8.pem -outform PEM -topk8
  
  You receive a response similar to the following::

    Status 200 Created

3. Consume the GOV.UK Verify hub's metadata from the URL ``compliance-tool.MetadataUri`` provided by your GOV.UK Verify engagement lead. This metadata contains the compliance tool single sign-on (SSO) URI. 

4. Generate an authentication request and POST it to the compliance tool's SSO URI. Follow the redirect in the response to retrieve the result. 

  .. note:: You may want to use an off-the-shelf tool to generate an authentication request. 

5. If the result contains ``PASSED``, access the URI provided in ``responseGeneratorLocation``. A list of test scenarios is displayed.
6. Access the ``executeUri`` for each test scenario you want to execute. The following test scenarios are provided:

  * Basic successful match
  * Basic no match
  * No authentication context (this is when the user cancels the process)
  * Authentication failed
  * Requester error (this is when the request is invalid)
  * Account creation

  .. note:: The above scenarios are the possible responses for step 8 in the :ref:`SAML message flow <samlWorks>`.

